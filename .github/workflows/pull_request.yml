name: Build, Analyze and Test on PR
on:
    pull_request:
        branches:
            - main
env:
    AZURE_WEBAPP_PACKAGE_PATH: CarWash.PWA\publish
    AZURE_FUNCTIONAPP_PACKAGE_PATH: "CarWash.Functions"
    CONFIGURATION: Release
    DOTNET_VERSION: 8.0.x
    WORKING_DIRECTORY_PWA: CarWash.PWA
    WORKING_DIRECTORY_FUNCTIONS: CarWash.Functions
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
jobs:
    build:
        runs-on: windows-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Setup .NET SDK
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}
            - name: .NET Tool Restore
              run: dotnet tool restore
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: 17
                  distribution: "zulu"
            - name: Cache SonarQube Cloud packages
              uses: actions/cache@v4
              with:
                  path: ~\sonar\cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache SonarQube Cloud scanner
              id: cache-sonar-scanner
              uses: actions/cache@v4
              with:
                  path: .\.sonar\scanner
                  key: ${{ runner.os }}-sonar-scanner
                  restore-keys: ${{ runner.os }}-sonar-scanner
            - name: Install SonarQube Cloud scanner
              if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
              shell: powershell
              run: |
                  New-Item -Path .\.sonar\scanner -ItemType Directory
                  dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
            - name: Restore PWA
              run: dotnet restore "${{ env.WORKING_DIRECTORY_PWA }}"
            - name: Restore Functions
              run: dotnet restore "${{ env.WORKING_DIRECTORY_FUNCTIONS }}"
            - name: Build and analyze
              shell: powershell
              run: |
                  .\.sonar\scanner\dotnet-sonarscanner begin /k:"mark-szabo_carwash" /o:"mark-szabo-github" /d:sonar.token="${{ env.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
                  dotnet build "${{ env.WORKING_DIRECTORY_PWA }}" --configuration ${{ env.CONFIGURATION }} --no-restore
                  dotnet build "${{ env.WORKING_DIRECTORY_FUNCTIONS }}" --configuration ${{ env.CONFIGURATION }} --no-restore
                  dotnet dotnet-coverage collect "dotnet test CarWash.PWA.Tests" -f xml -o "coverage.xml"
                  .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"
            - name: Test
              run: dotnet test "CarWash.PWA.Tests"
            - name: Publish
              run: dotnet publish "${{ env.WORKING_DIRECTORY_PWA }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
